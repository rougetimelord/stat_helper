function d(a, b) { if (!b || a.length != b.length) return !1; for (var c = 0, f = a.length; c < f; c++) if (a[c] instanceof Array && b[c] instanceof Array) { if (!d(a[c], b[c])) return !1 } else if (a[c] != b[c]) return !1; return !0 } var g = 0, h = { o: null, min: null, g: null, f: null, h: null, max: null, c: null, mode: null, l: null, i: null, m: null }; function k(a) { console.log("Median getter called"); var b = Math.floor(a.length / 2); return 1 == a.length % 2 ? { j: a[b], a: b, s: !0 } : { j: (a[b - 1] + a[b]) / 2, a: b, s: !1 } }
var l = {
    get b() { var a = document.getElementById("inp").value.split(",").map(Number).sort(function (a, c) { return a - c }); d(a, h.o) || (console.log("New data"), h = { o: null, min: null, g: null, f: null, h: null, max: null, c: null, mode: null, l: null, i: null, m: null }, h.o = a); return a }, get u() { delete this.u; return this.u = document.getElementById("res") }, get c() { if (null === h.c) { console.log("Mean getter called"); for (var a = l.b, b = 0, c = 0; c < a.length; c++) b += a[c]; h.c = b / a.length; return b / a.length } return h.c }, get mode() {
        if (null === h.mode) {
            console.log("Mode getter called");
            for (var a = l.b, b = [], c = [], f = [], e = 0; e < a.length; e++) -1 === c.indexOf(a[e]) ? (b.push([a[e], 1]), c.push(a[e])) : b[c.indexOf(a[e])][1]++; b = b.sort(function (a, b) { return b[1] - a[1] }); a = !0; for (e = c = 0; e < b.length; e++) if (b[e][1] >= c && (c = b[e][1], f.push(b[e][0])), e < b.length - 1 && b[e][1] != b[e + 1][1]) { a = !1; break } a && (f = ["No mode"]); return h.mode = f
        } return h.mode
    }, get i() {
        var a = l.b; if (null !== h.i) return h.i; console.log("Std. dev. getter called"); for (var b = l.c, c = 0, f = 0; f < a.length; f++) c += Math.pow(a[f] - b, 2); a = Math.sqrt(c / (a.length - 1));
        return h.i = a
    }, get v() { var a = l.b; if (null !== h.m) return h.m; for (var b = [], c = this.c, f = this.i, e = 0; e < a.length; e++) b.push(parseFloat(((a[e] - c) / f).toFixed(4))); return h.m = b }
}; function n() { var a = l.b, b, c, f; null === h.min ? (b = a[0], h.min = b) : b = h.min; null === h.max ? (c = a[a.length - 1], h.max = c) : c = h.max; null === h.f ? (f = k(a), h.f = f) : f = h.f; var e = f.j, m; null === h.g || null === h.h ? (m = f.s ? a.slice(0, f.a + 1) : a.slice(0, f.a), a = a.slice(f.a, a.length + 1), m = k(m).j, a = k(a).j, h.g = m, h.h = a) : (m = h.g, a = h.h); p(q([b, m, e, a, c]), "array"); g++ }
function r() { var a = l.b, b; null === h.f ? (b = k(a), h.f = b) : b = h.f; var c, f = []; if (null === h.l) { null === h.g || null === h.h ? (c = b.s ? a.slice(0, b.a + 1) : a.slice(0, b.a), b = a.slice(b.a, a.length + 1), c = k(c).j, b = k(b).j, h.g = c, h.h = b) : (c = h.g, b = h.h); var e = 1.5 * (b - c); c -= e; b += e; for (e = 0; e < Math.ceil(a.length / 4) ; e++) a[e] < c && f.push(a[e]); for (c = a.length - 1 - Math.floor(a.length / 4) ; c < a.length; c++) a[c] > b && f.push(a[c]); 0 === f.length && f.push("No outliers"); h.l = f } else f = h.l; p(q(f), "array"); g++ } function t() { p(q([l.c, q(l.mode)]), "array") }
function u() { p(q(l.b), "array") } function v() { p(l.i, "number") } function w() { p(q(l.b), "array"); p(q(l.v), "array") } function q(a) { for (var b = "[", c = 0; c < a.length; c++) b = c < a.length - 1 ? b + (a[c] + ", ") : b + a[c]; return b + "]" } function p(a, b) { var c = document.createElement("p"); c.innerText = a; c.classList.add(b, g); l.u.appendChild(c); scroller() }
setTimeout(function () { console.log("Initiating"); document.getElementById("btn").addEventListener("click", n); document.getElementById("btn1").addEventListener("click", r); document.getElementById("btn2").addEventListener("click", t); document.getElementById("btn3").addEventListener("click", u); document.getElementById("btn4").addEventListener("click", v); document.getElementById("btn5").addEventListener("click", w) }, 100);